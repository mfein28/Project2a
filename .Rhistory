hoverinfo = "text",
type = "pie",
textposition = "outside") %>%
layout(title = "Percentage Breakdown of Total Crimes by Ward")
fig2
loadPkg("zipcode")
data("zipcode")
zipcode <- zipcode %>%
filter(state == "DC") %>%
select(zip, latitude, longitude)
# Join zip code with crime dataset
zipcode$latitude <- round(zipcode$latitude, 2)
zipcode$longitude <- round(zipcode$longitude, 2)
crime$LATITUDE <- round(crime$LATITUDE, 2)
crime$LONGITUDE <- round(crime$LONGITUDE, 2)
crime <- left_join(crime, zipcode, by = c("LATITUDE" = "latitude", "LONGITUDE" = "longitude"))
crime <- crime[!duplicated(crime$uniqueID), ]
crime <- subset(crime, !is.na(crime$zip))
# Join zip code with listings dataset
listings$latitude <- round(listings$latitude, 2)
listings$longitude <- round(listings$longitude, 2)
listings <- left_join(listings, zipcode, by = c("latitude", "longitude"))
listings <- listings[!duplicated(listings$id), ]
listings <- subset(listings, !is.na(listings$zip))
# Join listings with crime dataset by zip code
crime_listings <- left_join(listings, crime, by = "zip")
crime_listings <- crime_listings[!duplicated(crime_listings$uniqueID), ] # 13,775 observations
crime_count <- crime_listings %>%
select(id, zip, price, OFFENSE) %>%
group_by(zip, as.character(OFFENSE)) %>%
summarise(count = n()) %>%
ungroup() %>%
group_by(zip) %>%
summarise_at(vars(count), list(sum)) %>%
arrange(desc(count))
fig3 <- plot_ly(crime_count[1:10, ],
labels = ~zip,
values = ~count,
textinfo = "percent",
text = ~paste(comma(count), "total crimes"),
hoverinfo = "text",
type = "pie",
textposition = "outside") %>%
layout(title = "Percentage Breakdown Crimes in Top Ten Zip Codes")
fig3
loadPkg("qwraps2")
options(qwraps2_markup = "markdown")
summ_table_input <- listings %>%
select(zip, price) %>%
filter(zip == "20004" | zip == "20010" | zip == "20009" | zip == "20002" & price < 1500)
summ_table <-
list("Price" =
list("min" = ~min(.data$price),
"max" = ~max(.data$price),
"median" = ~median(.data$price),
"mean (sd)" = ~qwraps2::mean_sd(.data$price)))
tab <- summary_table(dplyr::group_by(summ_table_input, zip), summ_table)
print(tab,
rtitle = "Summary Statistics",
cnames = c("20002 (low)", "20004 (high)", "20009 (low)", "20010 (high)"))
fig4 <- ggplot(subset(summ_table_input, price < 1500), aes(x = zip, y = price, fill = zip)) +
geom_boxplot() +
theme_bw() +
labs(x = "Zip Code",
y = "Price",
fill = "Zip Code")
print(fig4 + ggtitle("Boxplot of Listing Prices by Zip Code"))
?lm
View(crime_listings)
View(crime_count)
View(dt)
View(crime_listings)
lm1 <- crime_listings %>%
group_by(zip) %>%
summarise(crimes = n()) %>%
lm(price~count)
lm1 <- crime_listings %>%
group_by(zip) %>%
summarise(crimes = n()) %>%
lm(price~count, lm1)
lm1_input <- crime_listings %>%
group_by(zip) %>%
summarise(crimes = n())
lm(price~count, lm1_input)
colnames(crime_listings)
colnames(lm1_input)
lm1_input <- crime_listings %>%
group_by(zip, price) %>%
summarise(crimes = n())
View(lm1_input)
lm1_input <- crime_listings %>%
group_by(price) %>%
summarise(crimes = n())
lm(price~count, lm1_input)
lm1_input <- crime_listings %>%
group_by(price) %>%
summarise(crimes = n())
View(lm1_input)
lm(price~crimes, lm1_input)
loadPkg("memisc")
lm1_input <- crime_listings %>%
group_by(price) %>%
summarise(crimes = n())
lm1 <- lm(price~crimes, lm1_input)
reg_table <- mtable("Model 1" = lm1,
summary.stats = c("R-squared", "F", "p", "N"))
reg_table
crime_listings_no_dup <- crime_listings_no_dup[!duplicated(crime_listings$uniqueID, crime_listings$id), ] # 13,775 observations
crime_listings_no_dup <- crime_listings[!duplicated(crime_listings$uniqueID, crime_listings$id), ] # 13,775 observations
View(crime_listings)
View(crime_listings_no_dup)
View(crime_listings_no_dup)
?duplicated
crime_listings_no_dup <- crime_listings[!duplicated(c(crime_listings$uniqueID, crime_listings$id)), ] # 13,775 observations
View(crime_listings_no_dup)
crime_listings_no_dup <- crime_listings[!duplicated(c(crime_listings$id, crime_listings$uniqueID)), ] # 13,775 observations
# Join listings with crime dataset by zip code
crime_listings <- left_join(listings, crime, by = "zip")
crime_listings_no_dup <- crime_listings[!duplicated(c(crime_listings$id, crime_listings$uniqueID)), ] # 13,775 observations
View(crime_listings_no_dup)
crime_count <- crime_listings_no_dup %>%
select(id, zip, price, OFFENSE) %>%
group_by(zip, as.character(OFFENSE)) %>%
summarise(count = n()) %>%
ungroup() %>%
group_by(zip) %>%
summarise_at(vars(count), list(sum)) %>%
arrange(desc(count))
crime_listings_no_dup <- crime_listings[!duplicated(c(crime_listings$id, crime_listings$uniqueID)), ] # 13,775 observations
View(crime_listings_no_dup)
crime_count <- crime_listings_no_dup %>%
select(id, zip, price, OFFENSE)
knitr::opts_chunk$set(warning = F,
include = F,
message = F,
echo = F,
comment = "")
# can add quietly=T option to the require() function
loadPkg = function(x) { if (!require(x,character.only=T, quietly =T)) { install.packages(x,dep=T,repos="http://cran.us.r-project.org"); if(!require(x,character.only=T)) stop("Package not found") } }
proper <- function(x){
paste0(toupper(substr(x, 1, 1)), tolower(substr(x, 2, nchar(x))))
}
loadPkg("dplyr")
listings <- read.csv("listings.csv")
listings$neighbourhoodCount <- table(listings$neighbourhood)
crime <- read.csv("crime.csv")
crime$uniqueID <- c(1:nrow(crime))
loadPkg("scales")
str(listings)
str(crime)
loadPkg("pander")
loadPkg("kableExtra")
WARD <- c(1:8)
dt <- table(crime$WARD, crime$OFFENSE)
TOTAL <- rowSums(dt)
dt <- cbind(WARD, dt, TOTAL)
kable(dt) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"), full_width = F, position = "left") %>%
column_spec(1, color = "red")
loadPkg("ggplot2")
fig1 <- ggplot(crime, aes(x = WARD, fill = proper(as.character(OFFENSE)))) +
geom_bar() +
theme_bw() +
labs(x = "Ward",
y = "Frequency",
fill = "Type of Offense") +
scale_x_discrete(limits = c(1:8, "1"))
print(fig1 + ggtitle("Frequency of Offense by Type and Ward"))
loadPkg("plotly")
pie_input <- as.data.frame(cbind(WARD, TOTAL)) %>%
arrange(WARD)
fig2 <- plot_ly(pie_input,
labels = ~WARD,
values = ~TOTAL,
textinfo = "percent",
text = ~paste("Ward", WARD),
hoverinfo = "text",
type = "pie",
textposition = "outside") %>%
layout(title = "Percentage Breakdown of Total Crimes by Ward")
fig2
loadPkg("zipcode")
data("zipcode")
zipcode <- zipcode %>%
filter(state == "DC") %>%
select(zip, latitude, longitude)
# Join zip code with crime dataset
zipcode$latitude <- round(zipcode$latitude, 2)
zipcode$longitude <- round(zipcode$longitude, 2)
crime$LATITUDE <- round(crime$LATITUDE, 2)
crime$LONGITUDE <- round(crime$LONGITUDE, 2)
crime <- left_join(crime, zipcode, by = c("LATITUDE" = "latitude", "LONGITUDE" = "longitude"))
crime <- crime[!duplicated(crime$uniqueID), ]
crime <- subset(crime, !is.na(crime$zip))
# Join zip code with listings dataset
listings$latitude <- round(listings$latitude, 2)
listings$longitude <- round(listings$longitude, 2)
listings <- left_join(listings, zipcode, by = c("latitude", "longitude"))
listings <- listings[!duplicated(listings$id), ]
listings <- subset(listings, !is.na(listings$zip))
# Join listings with crime dataset by zip code
crime_listings <- left_join(listings, crime, by = "zip")
crime_listings_no_dup <- crime_listings[!duplicated(crime_listings$uniqueID), ] # 13,775 observations
crime_count <- crime_listings_no_dup %>%
filter(!is.na(zip)) %>%
select(id, zip, price, OFFENSE) %>%
group_by(zip, as.character(OFFENSE)) %>%
summarise(count = n()) %>%
ungroup() %>%
group_by(zip) %>%
summarise_at(vars(count), list(sum)) %>%
arrange(desc(count))
fig3 <- plot_ly(crime_count[1:10, ],
labels = ~zip,
values = ~count,
textinfo = "percent",
text = ~paste(comma(count), "total crimes"),
hoverinfo = "text",
type = "pie",
textposition = "outside") %>%
layout(title = "Percentage Breakdown Crimes in Top Ten Zip Codes")
fig3
loadPkg("qwraps2")
options(qwraps2_markup = "markdown")
summ_table_input <- listings %>%
select(zip, price) %>%
filter(zip == "20004" | zip == "20010" | zip == "20009" | zip == "20002" & price < 1500)
summ_table <-
list("Price" =
list("min" = ~min(.data$price),
"max" = ~max(.data$price),
"median" = ~median(.data$price),
"mean (sd)" = ~qwraps2::mean_sd(.data$price)))
tab <- summary_table(dplyr::group_by(summ_table_input, zip), summ_table)
print(tab,
rtitle = "Summary Statistics",
cnames = c("20002 (low)", "20004 (high)", "20009 (low)", "20010 (high)"))
fig4 <- ggplot(subset(summ_table_input, price < 1500), aes(x = zip, y = price, fill = zip)) +
geom_boxplot() +
theme_bw() +
labs(x = "Zip Code",
y = "Price",
fill = "Zip Code")
print(fig4 + ggtitle("Boxplot of Listing Prices by Zip Code"))
loadPkg("memisc")
crime_rates <- crime %>%
select(zip, OFFENSE) %>%
group_by(zip) %>%
mutate(arson_rate = sum(OFFENSE == "ARSON") / nrow(crime) * 100,
assualt_rate = sum(OFFENSE == "ASSAULT W/DANGEROUS WEAPON") / nrow(crime) * 100,
burglary_rate = sum(OFFENSE == "BURGLARY") / nrow(crime) * 100,
homicide_rate = sum(OFFENSE == "HOMICIDE") / nrow(crime) * 100,
motorTheft_rate = sum(OFFENSE == "MOTOR VEHICLE THEFT") / nrow(crime) * 100,
robbery_rate = sum(OFFENSE == "ROBBERY") / nrow(crime) * 100,
sexAbuse_rate = sum(OFFENSE == "SEX ABUSE") / nrow(crime) * 100,
theftAuto_rate = sum(OFFENSE == "THEFT F/AUTO") / nrow(crime) * 100,
theftOther_rate = sum(OFFENSE == "THEFT/OTHER") / nrow(crime) * 100) %>%
summarise(total_crimes = n())
detach("package:dplyr", unload=TRUE)
detach("package:memisc", unload=TRUE)
library("memisc", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
knitr::opts_chunk$set(warning = F,
include = F,
message = F,
echo = F,
comment = "")
# can add quietly=T option to the require() function
loadPkg = function(x) { if (!require(x,character.only=T, quietly =T)) { install.packages(x,dep=T,repos="http://cran.us.r-project.org"); if(!require(x,character.only=T)) stop("Package not found") } }
proper <- function(x){
paste0(toupper(substr(x, 1, 1)), tolower(substr(x, 2, nchar(x))))
}
loadPkg("memisc")
loadPkg("dplyr")
crime_rates <- crime %>%
select(zip, OFFENSE) %>%
group_by(zip) %>%
mutate(arson_rate = sum(OFFENSE == "ARSON") / nrow(crime) * 100,
assualt_rate = sum(OFFENSE == "ASSAULT W/DANGEROUS WEAPON") / nrow(crime) * 100,
burglary_rate = sum(OFFENSE == "BURGLARY") / nrow(crime) * 100,
homicide_rate = sum(OFFENSE == "HOMICIDE") / nrow(crime) * 100,
motorTheft_rate = sum(OFFENSE == "MOTOR VEHICLE THEFT") / nrow(crime) * 100,
robbery_rate = sum(OFFENSE == "ROBBERY") / nrow(crime) * 100,
sexAbuse_rate = sum(OFFENSE == "SEX ABUSE") / nrow(crime) * 100,
theftAuto_rate = sum(OFFENSE == "THEFT F/AUTO") / nrow(crime) * 100,
theftOther_rate = sum(OFFENSE == "THEFT/OTHER") / nrow(crime) * 100) %>%
summarise(total_crimes = n())
lm1_input <- left_join(listings, crime_rates, by = "zip")
lm1_input <- lm1_input %>%
filter(!duplicated(id))
lm1 <- lm(price~total_crimes, lm1_input)
reg_table <- mtable("Model 1" = lm1,
summary.stats = c("R-squared", "F", "p", "N"))
reg_table
View(lm1_input)
crime_rates <- crime %>%
select(zip, OFFENSE) %>%
group_by(zip) %>%
mutate(arson_rate = sum(OFFENSE == "ARSON") / nrow(crime) * 100,
assualt_rate = sum(OFFENSE == "ASSAULT W/DANGEROUS WEAPON") / nrow(crime) * 100,
burglary_rate = sum(OFFENSE == "BURGLARY") / nrow(crime) * 100,
homicide_rate = sum(OFFENSE == "HOMICIDE") / nrow(crime) * 100,
motorTheft_rate = sum(OFFENSE == "MOTOR VEHICLE THEFT") / nrow(crime) * 100,
robbery_rate = sum(OFFENSE == "ROBBERY") / nrow(crime) * 100,
sexAbuse_rate = sum(OFFENSE == "SEX ABUSE") / nrow(crime) * 100,
theftAuto_rate = sum(OFFENSE == "THEFT F/AUTO") / nrow(crime) * 100,
theftOther_rate = sum(OFFENSE == "THEFT/OTHER") / nrow(crime) * 100) %>%
summarise(total_crimes = n())
lm1_input <- left_join(listings, crime_rates, by = "zip")
colnames(lm1_input)
colnames(crime_rates)
crime_rates <- crime %>%
select(zip, OFFENSE) %>%
group_by(zip) %>%
mutate(arson_rate = sum(OFFENSE == "ARSON") / nrow(crime) * 100,
assualt_rate = sum(OFFENSE == "ASSAULT W/DANGEROUS WEAPON") / nrow(crime) * 100,
burglary_rate = sum(OFFENSE == "BURGLARY") / nrow(crime) * 100,
homicide_rate = sum(OFFENSE == "HOMICIDE") / nrow(crime) * 100,
motorTheft_rate = sum(OFFENSE == "MOTOR VEHICLE THEFT") / nrow(crime) * 100,
robbery_rate = sum(OFFENSE == "ROBBERY") / nrow(crime) * 100,
sexAbuse_rate = sum(OFFENSE == "SEX ABUSE") / nrow(crime) * 100,
theftAuto_rate = sum(OFFENSE == "THEFT F/AUTO") / nrow(crime) * 100,
theftOther_rate = sum(OFFENSE == "THEFT/OTHER") / nrow(crime) * 100)
lm1_input <- lm1_input %>%
filter(!duplicated(id)) %>%
summarise(total_crimes = n())
lm1_input <- left_join(listings, crime_rates, by = "zip")
lm1 <- lm(price~total_crimes, lm1_input)
lm1_input <- lm1_input %>%
filter(!duplicated(id)) %>%
summarise(total_crimes = n())
lm1 <- lm(price~total_crimes, lm1_input)
View(lm1_input)
lm1_input <- left_join(listings, crime_rates, by = "zip")
lm1_input <- lm1_input %>%
filter(!duplicated(id))
lm1_input <- lm1_input %>%
group_by(id) %>%
summarise(total_crimes = n())
lm1_input <- left_join(listings, crime_rates, by = "zip")
lm1_input <- lm1_input %>%
group_by(zip) %>%
mutate(total_crimes = n())
sum(lm1_input$total_crimes)
table(lm1_input$total_crimes)
sum(lm1_input$id == "3344")
sum(zip == "3344")
sum(zip == "20004")
sum(lm1_input$zip == "20004")
sum(duplicated(lm1_input$id))
lm1_input <- lm1_input %>%
filter(!duplicated(id)) %>%
group_by(zip) %>%
mutate(total_crimes = n())
lm1 <- lm(price~total_crimes, lm1_input)
reg_table <- mtable("Model 1" = lm1,
summary.stats = c("R-squared", "F", "p", "N"))
reg_table
sum(lm1_input$id)
sum(duplicated(lm1_input$id))
lm1_input <- lm1_input %>%
filter(!duplicated(id)) %>%
group_by(zip) %>%
mutate(avg_price = mean(price),
total_crimes = n())
lm1 <- lm(price~total_crimes, lm1_input)
reg_table <- mtable("Model 1" = lm1,
summary.stats = c("R-squared", "F", "p", "N"))
reg_table
lm1 <- lm(avg_price~total_crimes, lm1_input)
reg_table <- mtable("Model 1" = lm1,
summary.stats = c("R-squared", "F", "p", "N"))
reg_table
lm1_input <- left_join(listings, crime_rates, by = "zip")
lm1_input <- lm1_input %>%
filter(!duplicated(id))
lm1_input <- left_join(listings, crime_rates, by = "zip")
lm1_input <- lm1_input %>%
group_by(id) %>%
mutate(avg_price = mean(price),
total_crimes = n()) %>%
filter(!duplicated(id))
lm1 <- lm(avg_price~total_crimes, lm1_input)
reg_table <- mtable("Model 1" = lm1,
summary.stats = c("R-squared", "F", "p", "N"))
reg_table
lm1_input <- lm1_input %>%
group_by(id) %>%
mutate(total_crimes = n()) %>%
filter(!duplicated(id))
lm1 <- lm(price~total_crimes, lm1_input)
reg_table <- mtable("Model 1" = lm1,
summary.stats = c("R-squared", "F", "p", "N"))
lm1_input <- lm1_input %>%
group_by(id) %>%
mutate(total_crimes = n()) %>%
filter(!duplicated(id))
lm1_input <- left_join(listings, crime_rates, by = "zip")
lm1_input <- lm1_input %>%
group_by(id) %>%
mutate(total_crimes = n()) %>%
filter(!duplicated(id))
lm1 <- lm(price~total_crimes, lm1_input)
reg_table <- mtable("Model 1" = lm1,
summary.stats = c("R-squared", "F", "p", "N"))
reg_table
lm2 <- lm(price~theftOther_rate, data = lm2_input)
lm2 <- lm(price~theftOther_rate, data = lm1_input)
reg_table <- mtable("Model 1" = lm1,
"Model 2" = lm2,
summary.stats = c("R-squared", "F", "p", "N"))
reg_table
lm2 <- lm(price~theftOther_rate + theftAuto_rate + robbery_rate, data = lm1_input)
reg_table <- mtable("Model 1" = lm1,
"Model 2" = lm2,
summary.stats = c("R-squared", "F", "p", "N"))
reg_table
lm2 <- lm(price~as.factor(OFFENSES), data = lm1_input)
lm2 <- lm(price~as.factor(OFFENSE), data = lm1_input)
reg_table <- mtable("Model 1" = lm1,
"Model 2" = lm2,
summary.stats = c("R-squared", "F", "p", "N"))
reg_table
lm2 <- lm(price~theftOther_rate + theftAuto_rate + robbery_rate + motorTheft_rate,
data = lm1_input)
reg_table <- mtable("Model 1" = lm1,
"Model 2" = lm2,
summary.stats = c("R-squared", "F", "p", "N"))
reg_table
lm2 <- lm(price~theftOther_rate + theftAuto_rate + robbery_rate + motorTheft_rate + number_of_reviews + as.factor(room_type),
data = lm1_input)
reg_table <- mtable("Model 1" = lm1,
"Model 2" = lm2,
summary.stats = c("R-squared", "F", "p", "N"))
reg_table
m
m
lm2 <- lm(price~theftOther_rate + theftAuto_rate + robbery_rate + motorTheft_rate,
data = lm1_input)
lm3 <- lm(price~theftOther_rate +
theftAuto_rate +
robbery_rate +
motorTheft_rate +
number_of_reviews +
as.factor(room_type),
data = lm1_input)
reg_table <- mtable("Model 1" = lm1,
"Model 2" = lm2,
"Model 3" = lm3,
summary.stats = c("R-squared", "F", "p", "N"))
reg_table
str(lm1_input)
table(lm1_input$OFFENSE)
reg_table <- relabel(reg_table,
"(Intercept)" = "Constant", total_crimes = "Crimes",
theftAuto_rate = "Theft (from auto)",
theftOther_rate = "Theft (other)",
robbery_rate = "Robbery",
motorTheft_rate = "Motor Theft",
number_of_reviews = "Number of Reviews",
as.factor(room_type): Private room/Entire home/apt =
(reg_table <- relabel(reg_table,
"(Intercept)" = "Constant", total_crimes = "Crimes",
theftAuto_rate = "Theft (from auto)",
theftOther_rate = "Theft (other)",
robbery_rate = "Robbery",
motorTheft_rate = "Motor Theft",
number_of_reviews = "Number of Reviews",
as.factor(room_type): Private room/Entire home/apt =
(reg_table <- relabel(reg_table,
"(Intercept)" = "Constant", total_crimes = "Crimes",
theftAuto_rate = "Theft (from auto)",
theftOther_rate = "Theft (other)",
robbery_rate = "Robbery",
motorTheft_rate = "Motor Theft",
number_of_reviews = "Number of Reviews",
Private room/Entire home/apt =
(reg_table <- relabel(reg_table,
"(Intercept)" = "Constant", total_crimes = "Crimes",
theftAuto_rate = "Theft (from auto)",
theftOther_rate = "Theft (other)",
robbery_rate = "Robbery",
motorTheft_rate = "Motor Theft",
number_of_reviews = "Number of Reviews",
as.factor(room_type):Private room/Entire home/apt = "Private Room/Entire Home/Apt",
(reg_table <- relabel(reg_table,
"(Intercept)" = "Constant", total_crimes = "Crimes",
theftAuto_rate = "Theft (from auto)",
theftOther_rate = "Theft (other)",
robbery_rate = "Robbery",
motorTheft_rate = "Motor Theft",
number_of_reviews = "Number of Reviews",
as.factor(room_type): Private room/Entire home/apt = "Private Room/Entire Home/Apt",
reg_table
reg_table <- relabel(reg_table,
"(Intercept)" = "Constant", total_crimes = "Crimes",
theftAuto_rate = "Theft (from auto)",
theftOther_rate = "Theft (other)",
robbery_rate = "Robbery",
motorTheft_rate = "Motor Theft",
number_of_reviews = "Number of Reviews")
reg_table
reg_table <- relabel(reg_table,
"(Intercept)" = "Constant", total_crimes = "Crimes",
theftAuto_rate = "Theft (from auto)",
theftOther_rate = "Theft (other)",
robbery_rate = "Robbery",
motorTheft_rate = "Motor Theft",
number_of_reviews = "Number of Reviews",
`as.factor(room_type): Private room/Entire home/apt` = "Private Room/Entire Home/Apt",
`as.factor(room_type): Shared room/Entire home/apt` = "Shared Room/Entire Home/Apt")
reg_table
